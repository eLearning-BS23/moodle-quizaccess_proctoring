{"version":3,"file":"startAttempt.min.js","sources":["../src/startAttempt.js"],"sourcesContent":["define(['jquery', 'core/ajax', 'core/notification', 'core/str'],\n    function($, Ajax, Notification, Str) {\n        const loadStrings = async function() {\n            const stringkeys = [\n                {key: 'facematched', component: 'quizaccess_proctoring'},\n                {key: 'photonotuploaded', component: 'quizaccess_proctoring'},\n                {key: 'invalidapi', component: 'quizaccess_proctoring'},\n                {key: 'facenotmatched', component: 'quizaccess_proctoring'},\n                {key: 'wrong_during_taking_image', component: 'quizaccess_proctoring'},\n            ];\n            try {\n                const strings = await Str.get_strings(stringkeys);\n                return {\n                    facematched: strings[0],\n                    photonotuploaded: strings[1],\n                    invalidapi: strings[2],\n                    facenotmatched: strings[3],\n                    wrongduringtakingimage: strings[4],\n                };\n            } catch (error) {\n                Notification.exception(error);\n                return {}; // Return an empty object in case of an error.\n            }\n        };\n\n        // Function to draw image from the box data.\n        const extractFaceFromBox = async(imageRef, box, croppedImage) => {\n            const regionsToExtract = [\n                // eslint-disable-next-line no-undef\n                new faceapi.Rect(box.x, box.y, box.width, box.height)\n            ];\n            // eslint-disable-next-line no-undef\n            let faceImages = await faceapi.extractFaces(imageRef, regionsToExtract);\n\n            if (faceImages.length !== 0) {\n                faceImages.forEach((cnv) => {\n                    croppedImage.src = cnv.toDataURL();\n                });\n            }\n        };\n        const detectface = async(input, croppedImage) => {\n            // eslint-disable-next-line no-undef\n            const output = await faceapi.detectAllFaces(input);\n            if (output.length !== 0) {\n                let detections = output[0].box;\n                await extractFaceFromBox(input, detections, croppedImage);\n            }\n        };\n        return {\n            setup: async function(props, modelurl) {\n                const strings = await loadStrings(); // Load localized strings.\n\n                if (modelurl !== null) {\n                    // eslint-disable-next-line no-undef\n                    await faceapi.nets.ssdMobilenetv1.loadFromUri(modelurl);\n                }\n\n                $('#fcvalidate').append('<img id=\"validate-cropimg\" style=\"display: none;\" src=\"\" alt=\"\"/>');\n                $(\"#fcvalidate\").click(async function(event) {\n\n                    event.preventDefault();\n                    const photo = document.getElementById('photo');\n                    const canvas = document.getElementById('canvas');\n                    const video = document.getElementById('video');\n                    const context = canvas.getContext('2d');\n                    canvas.width = props.imagewidth;\n\n                    canvas.height = canvas.width / (4 / 3);\n                    context.drawImage(video, 0, 0, canvas.width, canvas.height);\n                    var data = canvas.toDataURL('image/png');\n                    photo.setAttribute('src', data);\n\n                    const courseid = document.getElementById('courseidval').value;\n                    const cmid = document.getElementById('cmidval').value;\n                    const profileimage = document.getElementById('profileimage').value;\n\n                    // Getting the face image from screenshot.\n                    let croppedImage = $('#validate-cropimg');\n                    if (modelurl !== null) {\n                        await detectface(photo, croppedImage);\n                    }\n\n                    let faceFound;\n                    let faceImage;\n                    if (croppedImage.src) {\n                        faceFound = 1;\n                        faceImage = croppedImage.src;\n                    } else {\n                        faceFound = 0;\n                        faceImage = \"\";\n                    }\n                    const wsfunction = 'quizaccess_proctoring_validate_face';\n                    const params = {\n                        'courseid': courseid,\n                        'cmid': cmid,\n                        'profileimage': profileimage,\n                        'webcampicture': data,\n                        'parenttype': 'camshot_image',\n                        'faceimage': faceImage,\n                        'facefound': faceFound,\n                    };\n\n                    const request = {\n                        methodname: wsfunction,\n                        args: params\n                    };\n                    document.getElementById('loading_spinner').style.display = 'block';\n                    Ajax.call([request])[0].done(function(res) {\n                        if (res.warnings.length < 1) {\n                            document.getElementById('loading_spinner').style.display = 'none';\n                            var status = res.status;\n                            if (status === 'success') {\n                                $(\"#video\").css(\"border\", \"10px solid green\");\n                                $(\"#face_validation_result\").html(`<span style=\"color: green\">${strings.facematched}</span>`);\n                                document.getElementById(\"fcvalidate\").style.display = \"none\";\n                                $(\"#form_activate\").css(\"visibility\", \"visible\");\n                            } else if (status === 'photonotuploaded') {\n                                $(\"#video\").css(\"border\", \"10px solid red\");\n                                $(\"#face_validation_result\").html(`<span style=\"color: red\">${strings.photonotuploaded}</span>`);\n                            } else if (status === 'invalidApi') {\n                                $(\"#video\").css(\"border\", \"10px solid red\");\n                                $(\"#face_validation_result\").html(`<span style=\"color: red\">${strings.invalidapi}</span>`);\n                            } else {\n                                $(\"#video\").css(\"border\", \"10px solid red\");\n                                $(\"#face_validation_result\").html(`<span style=\"color: red\">${strings.facenotmatched}</span>`);\n                            }\n                        } else {\n                            document.getElementById('loading_spinner').style.display = 'none';\n                            if (video) {\n                                Notification.addNotification({\n                                    message: strings.wrongduringtakingimage,\n                                    type: 'error'\n                                });\n                            }\n                        }\n                    }).fail(Notification.exception);\n\n                });\n\n                return true;\n            }\n        };\n    });\n"],"names":["define","$","Ajax","Notification","Str","detectface","async","input","croppedImage","output","faceapi","detectAllFaces","length","detections","box","imageRef","regionsToExtract","Rect","x","y","width","height","faceImages","extractFaces","forEach","cnv","src","toDataURL","extractFaceFromBox","setup","props","modelurl","strings","stringkeys","key","component","get_strings","facematched","photonotuploaded","invalidapi","facenotmatched","wrongduringtakingimage","error","exception","loadStrings","nets","ssdMobilenetv1","loadFromUri","append","click","event","preventDefault","photo","document","getElementById","canvas","video","context","getContext","imagewidth","drawImage","data","setAttribute","courseid","value","cmid","profileimage","faceFound","faceImage","request","methodname","args","style","display","call","done","res","warnings","status","css","html","addNotification","message","type","fail"],"mappings":"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"}