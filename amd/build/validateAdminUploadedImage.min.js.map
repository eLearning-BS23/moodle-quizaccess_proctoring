{"version":3,"file":"validateAdminUploadedImage.min.js","sources":["../src/validateAdminUploadedImage.js"],"sourcesContent":["define(['jquery', 'core/ajax', 'core/notification', 'core/str'],\n    function ($, Ajax, Notification, str) {\n\n        let notificationShown = 0;\n\n        const clearPreviousNotifications = () => {\n            let alerts = document.getElementsByClassName('alert');\n            if(alerts.length > 0) {\n                alerts.forEach(alert => {\n                    alert.style.display = 'none';\n                });\n                notificationShown = 0;\n            }\n        }\n\n        const displayNotification = (message, type) => {\n            Notification.addNotification({\n                message,\n                type\n            });\n        }\n\n        // Function to draw image from the box data.\n        const extractFaceFromBox = async (imageRef, box, croppedImage) => {\n            const regionsToExtract = [\n                new faceapi.Rect(box.x, box.y, box.width, box.height)\n            ];\n            let faceImages = await faceapi.extractFaces(imageRef, regionsToExtract);\n\n            if (faceImages.length === 0) {   \n                console.log('Face not found');\n            } else {\n                faceImages.forEach((cnv) => {\n                    croppedImage.src = cnv.toDataURL();\n                });\n            }\n        };\n        const detectface = async (input, croppedImage) => {\n            \n            const output = await faceapi.detectAllFaces(input);\n            if (output.length === 0) {\n                console.log(\"Face not found\");\n            } else {\n                \n                let detections = output[0].box;\n                await extractFaceFromBox(input, detections, croppedImage);\n            }\n        };\n\n        return {\n            async setup (modelurl) {            \n                await faceapi.nets.ssdMobilenetv1.loadFromUri(modelurl);\n\n                $('#fitem_id_user_photo').append(\n                    '<img id=\"cropimg\" style=\"display:none;\"/><img id=\"previewimg\" style=\"display:none;\" height=\"auto\" width=\"auto\"/>');\n                \n                let submitBtn = document.getElementById('id_submitbutton');\n                let croppedImage = $('#cropimg');\n\n                let previewImage;\n                if(submitBtn) {\n                    submitBtn.disabled=true;\n                }\n\n                intervalToGetImage = setInterval(getPreviewImage, 1000);\n                async function getPreviewImage() {\n                       \n                    let preview = document.getElementsByClassName('realpreview');\n                    if(preview.length > 0) {\n                       \n                        previewImage = document.getElementById('previewimg');\n                        let imageUrlString = preview[0].src;\n\n                        const splitArray = imageUrlString.split(\"?\");\n\n                        if(previewImage.src !== splitArray[0]) {\n                            previewImage.src = splitArray[0];\n                        } else {\n                            return;\n                        }\n                        \n                        await detectface(previewImage, croppedImage);\n                        \n                        if(croppedImage.src) {\n                            console.log(\"Face found\");\n                            if(submitBtn) {\n                                submitBtn.disabled = false;\n                                //stopInterval();\n                            }\n\n                            clearPreviousNotifications();\n\n                            if(notificationShown == 0) {\n                                displayNotification('Face found in the uploaded image', 'success');\n                                notificationShown = 1;\n                            }\n                            let faceImageField = document.querySelector('[name=\"face_image\"]');\n                            \n                            if(faceImageField) {\n                                faceImageField.setAttribute('value', croppedImage.src);\n                            }\n                            \n                        } else {\n                            clearPreviousNotifications();\n                            if(notificationShown == 0) {\n                                displayNotification('Face not found in the uploaded image', 'error');\n                                notificationShown = 1;\n                            }\n                            croppedImage.src = null;\n                            console.log(\"Face not found\");\n                        }\n                        \n                    } else {\n                        if(submitBtn) {\n                            submitBtn.disabled = true;\n                        }\n                    }  \n                }\n\n                // function stopInterval() {\n                //     clearInterval(intervalToGetImage);\n                // }\n                \n                return true;\n            }\n        };\n    });\n"],"names":["define","$","Ajax","Notification","str","notificationShown","clearPreviousNotifications","alerts","document","getElementsByClassName","length","forEach","alert","style","display","displayNotification","message","type","addNotification","detectface","async","input","croppedImage","output","faceapi","detectAllFaces","console","log","detections","box","imageRef","regionsToExtract","Rect","x","y","width","height","faceImages","extractFaces","cnv","src","toDataURL","extractFaceFromBox","modelurl","nets","ssdMobilenetv1","loadFromUri","append","previewImage","submitBtn","getElementById","disabled","intervalToGetImage","setInterval","preview","splitArray","split","faceImageField","querySelector","setAttribute"],"mappings":"AAAAA,0DAAO,CAAC,SAAU,YAAa,oBAAqB,aAChD,SAAUC,EAAGC,KAAMC,aAAcC,SAEzBC,kBAAoB,QAElBC,2BAA6B,SAC3BC,OAASC,SAASC,uBAAuB,SAC1CF,OAAOG,OAAS,IACfH,OAAOI,SAAQC,QACXA,MAAMC,MAAMC,QAAU,UAE1BT,kBAAoB,IAItBU,oBAAsB,CAACC,QAASC,QAClCd,aAAae,gBAAgB,CACzBF,QAAAA,QACAC,KAAAA,QAmBFE,WAAaC,MAAOC,MAAOC,sBAEvBC,aAAeC,QAAQC,eAAeJ,UACtB,IAAlBE,OAAOb,OACPgB,QAAQC,IAAI,sBACT,KAECC,WAAaL,OAAO,GAAGM,SArBRT,OAAOU,SAAUD,IAAKP,sBACvCS,iBAAmB,CACrB,IAAIP,QAAQQ,KAAKH,IAAII,EAAGJ,IAAIK,EAAGL,IAAIM,MAAON,IAAIO,aAE9CC,iBAAmBb,QAAQc,aAAaR,SAAUC,kBAE5B,IAAtBM,WAAW3B,OACXgB,QAAQC,IAAI,kBAEZU,WAAW1B,SAAS4B,MAChBjB,aAAakB,IAAMD,IAAIE,gBAYrBC,CAAmBrB,MAAOO,WAAYN,sBAI7C,aACUqB,gBACHnB,QAAQoB,KAAKC,eAAeC,YAAYH,UAE9C1C,EAAE,wBAAwB8C,OACtB,wHAKAC,aAHAC,UAAYzC,SAAS0C,eAAe,mBACpC5B,aAAerB,EAAE,mBAGlBgD,YACCA,UAAUE,UAAS,GAGvBC,mBAAqBC,kCAGbC,QAAU9C,SAASC,uBAAuB,kBAC3C6C,QAAQ5C,OAAS,EAAG,CAEnBsC,aAAexC,SAAS0C,eAAe,oBAGjCK,WAFeD,QAAQ,GAAGd,IAEEgB,MAAM,QAErCR,aAAaR,MAAQe,WAAW,aAC/BP,aAAaR,IAAMe,WAAW,SAK5BpC,WAAW6B,aAAc1B,cAE5BA,aAAakB,IAAK,CACjBd,QAAQC,IAAI,cACTsB,YACCA,UAAUE,UAAW,GAIzB7C,6BAEwB,GAArBD,oBACCU,oBAAoB,mCAAoC,WACxDV,kBAAoB,OAEpBoD,eAAiBjD,SAASkD,cAAc,uBAEzCD,gBACCA,eAAeE,aAAa,QAASrC,aAAakB,UAItDlC,6BACwB,GAArBD,oBACCU,oBAAoB,uCAAwC,SAC5DV,kBAAoB,GAExBiB,aAAakB,IAAM,KACnBd,QAAQC,IAAI,uBAIbsB,YACCA,UAAUE,UAAW,KAlDiB,MA2D3C"}