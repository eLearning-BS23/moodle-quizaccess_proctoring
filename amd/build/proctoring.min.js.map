{"version":3,"file":"proctoring.min.js","sources":["../src/proctoring.js"],"sourcesContent":["// @SuppressWarnings(\"javascript:S4144\");\nlet isCameraAllowed = false;\n\ndefine(['jquery', 'core/ajax', 'core/notification'],\n    function ($, Ajax, Notification) {\n        $('#id_submitbutton').prop(\"disabled\", true);\n        $(function () {\n            $('#id_submitbutton').prop(\"disabled\", true);\n            $('#id_proctoring').on('change', function () {\n                if (this.checked && isCameraAllowed) {\n                    $('#id_submitbutton').prop(\"disabled\", false);\n                } else {\n                    $('#id_submitbutton').prop(\"disabled\", true);\n                }\n            });\n        });\n        /**\n         * Function hideButtons\n         */\n        function hideButtons() {\n            $('.mod_quiz-next-nav').prop(\"disabled\", true);\n            $('.submitbtns').html('<p class=\"text text-red red\">You need to enable web camera before submitting this quiz!</p>');\n        }\n        let firstcalldelay = 3000; // 3 seconds after the page load\n        let takepicturedelay = 30000; // 30 seconds\n        // Function to draw image from the box data.\n        const extractFaceFromBox = async (imageRef, box, croppedImage) => {\n            const regionsToExtract = [\n                // eslint-disable-next-line no-undef\n                new faceapi.Rect(box.x, box.y, box.width, box.height)\n            ];\n            // eslint-disable-next-line no-undef\n            let faceImages = await faceapi.extractFaces(imageRef, regionsToExtract);\n\n            if (faceImages.length === 0) {\n                // eslint-disable-next-line no-console\n                console.log('Face not found');\n            } else {\n                // eslint-disable-next-line no-console\n                faceImages.forEach((cnv) => {\n                    croppedImage.src = cnv.toDataURL();\n                });\n                // console.log(croppedImage.src);\n            }\n        };\n        const detectface = async (input, croppedImage) => {\n            // eslint-disable-next-line no-undef\n            const output = await faceapi.detectAllFaces(input);\n            if (output.length === 0) {\n                // eslint-disable-next-line no-console\n                //console.log(\"No face found\");\n            } else {\n                // eslint-disable-next-line no-console\n                //console.log(\"Face found\");\n                let detections = output[0].box;\n                await extractFaceFromBox(input, detections, croppedImage);\n            }\n        };\n        return {\n            async setup(props, modelurl) {\n                // eslint-disable-next-line babel/no-unused-expressions,no-undef,promise/catch-or-return\n                await faceapi.nets.ssdMobilenetv1.loadFromUri(modelurl);\n                takepicturedelay = props.camshotdelay;\n                // Skip for summary page\n                if (document.getElementById(\"page-mod-quiz-summary\") !== null &&\n                    document.getElementById(\"page-mod-quiz-summary\").innerHTML.length) {\n                    return false;\n                }\n                if (document.getElementById(\"page-mod-quiz-review\") !== null &&\n                    document.getElementById(\"page-mod-quiz-review\").innerHTML.length) {\n                    return false;\n                }\n\n                const width = props.image_width;\n                let height = 0; // This will be computed based on the input stream\n                let streaming = false;\n                let data = null;\n\n                $('#mod_quiz_navblock').append('<div class=\"card-body p-3\"><h3 class=\"no text-left\">Webcam</h3> <br/>'\n                    + '<video id=\"video\">Video stream not available.</video>'\n                    + '<img id=\"cropimg\" src=\"\" alt=\"\"/><canvas id=\"canvas\" style=\"display:none;\"></canvas>'\n                    + '<div class=\"output\" style=\"display:none;\">'\n                    + '<img id=\"photo\" alt=\"The picture will appear in this box.\"/></div></div>');\n                // eslint-disable-next-line promise/catch-or-return\n\n                // eslint-disable-next-line promise/always-return\n                const video = document.getElementById('video');\n                const canvas = document.getElementById('canvas');\n                const photo = document.getElementById('photo');\n\n                const clearphoto = () => {\n                    const context = canvas.getContext('2d');\n                    context.fillStyle = \"#AAA\";\n                    context.fillRect(0, 0, canvas.width, canvas.height);\n                    data = canvas.toDataURL('image/png');\n                    photo.setAttribute('src', data);\n                };\n\n                const takepicture = async () => {\n                    const context = canvas.getContext('2d');\n                    if (width && height) {\n                        canvas.width = width;\n                        canvas.height = height;\n                        context.drawImage(video, 0, 0, width, height);\n                        data = canvas.toDataURL('image/png');\n                        console.log(data);\n                        photo.setAttribute('src', data);\n                        props.webcampicture = data;\n                        // eslint-disable-next-line no-console,promise/catch-or-return\n                        let croppedImage = $('#cropimg');\n                        await detectface(photo, croppedImage);\n                        \n                        console.log(croppedImage.src);\n\n                        let faceFound;\n                        if(croppedImage.src) {\n                            console.log(\"Face found\");\n                            faceFound = 1;\n                        } else {\n                            console.log(\"Face not found\");\n                            faceFound = 0;\n                        }\n                        // eslint-disable-next-line promise/catch-or-return\n                        var wsfunction = 'quizaccess_proctoring_send_camshot';\n                        var params = {\n                            'courseid': props.courseid,\n                            'screenshotid': props.id,\n                            'quizid': props.quizid,\n                            'webcampicture': data,\n                            'imagetype': 1,\n                            'parenttype': 'camshot_image',\n                            'faceimage': croppedImage.src,\n                            'facefound': faceFound,\n                        };\n                        var request = {\n                            methodname: wsfunction,\n                            args: params\n                        };\n\n                        Ajax.call([request])[0].done(function (res) {\n                            if (res.warnings.length < 1) {\n                                // NO\n                            } else {\n                                if (video) {\n                                    Notification.addNotification({\n                                        message: 'Something went wrong during taking the image.',\n                                        type: 'error'\n                                    });\n                                }\n                            }\n                        }).fail(Notification.exception);\n                    } else {\n                        clearphoto();\n                    }\n                };\n\n                navigator.mediaDevices.getUserMedia({video: true, audio: false})\n                    // eslint-disable-next-line promise/always-return\n                    .then(function (stream) {\n                        video.srcObject = stream;\n                        video.play();\n                        isCameraAllowed = true;\n                    })\n                    .catch(function () {\n                        hideButtons();\n                    });\n\n                if (video) {\n                    video.addEventListener('canplay', function () {\n                        if (!streaming) {\n                            height = video.videoHeight / (video.videoWidth / width);\n                            // Firefox currently has a bug where the height can't be read from\n                            // The video, so we will make assumptions if this happens.\n                            if (isNaN(height)) {\n                                height = width / (4 / 3);\n                            }\n                            video.setAttribute('width', width);\n                            video.setAttribute('height', height);\n                            canvas.setAttribute('width', width);\n                            canvas.setAttribute('height', height);\n                            streaming = true;\n                        }\n                    }, false);\n\n                    // Allow to click picture\n                    video.addEventListener('click', async function (ev) {\n                        await takepicture();\n                        ev.preventDefault();\n                    }, false);\n                    setTimeout(takepicture, firstcalldelay);\n                    setInterval(takepicture, takepicturedelay);\n                } else {\n                    hideButtons();\n                }\n\n                return true;\n            },\n            async init(props) {\n                let height = 0; // This will be computed based on the input stream\n                let streaming = false;\n                let video = null;\n                let canvas = null;\n                let photo = null;\n                let data = null;\n                const width = props.image_width;\n\n                /**\n                 * Startup\n                 */\n                async function startup() {\n                    video = document.getElementById('video');\n                    canvas = document.getElementById('canvas');\n                    photo = document.getElementById('photo');\n\n                    if (video) {\n                        navigator.mediaDevices.getUserMedia({video: true, audio: false})\n                            // eslint-disable-next-line promise/always-return\n                            .then(function (stream) {\n                                video.srcObject = stream;\n                                video.play();\n                                isCameraAllowed = true;\n                            })\n                            .catch(function () {\n                                Notification.addNotification({\n                                    message: props.allowcamerawarning,\n                                    type: 'warning'\n                                });\n                                hideButtons();\n                            });\n\n                        video.addEventListener('canplay', function () {\n                            if (!streaming) {\n                                height = video.videoHeight / (video.videoWidth / width);\n                                // Firefox currently has a bug where the height can't be read from\n                                // The video, so we will make assumptions if this happens.\n                                if (isNaN(height)) {\n                                    height = width / (4 / 3);\n                                }\n                                video.setAttribute('width', width);\n                                video.setAttribute('height', height);\n                                canvas.setAttribute('width', width);\n                                canvas.setAttribute('height', height);\n                                streaming = true;\n                            }\n                        }, false);\n\n                        // Allow to click picture\n                        video.addEventListener('click', async function (ev) {\n                            await takepicture();\n                            ev.preventDefault();\n                        }, false);\n                    } else {\n                        hideButtons();\n                    }\n                    clearphoto();\n                }\n\n                /**\n                 * Clearphoto\n                 */\n                function clearphoto() {\n                    if (isCameraAllowed) {\n                        var context = canvas.getContext('2d');\n                        context.fillStyle = \"#AAA\";\n                        context.fillRect(0, 0, canvas.width, canvas.height);\n\n                        data = canvas.toDataURL('image/png');\n                        photo.setAttribute('src', data);\n                    } else {\n                        hideButtons();\n                    }\n                }\n\n                /**\n                 * Takepicture\n                 */\n                async function takepicture() {\n                    var context = canvas.getContext('2d');\n                    if (width && height) {\n                        $(document).trigger(\"screenshoottaken\");\n                        canvas.width = width;\n                        canvas.height = height;\n                        context.drawImage(video, 0, 0, width, height);\n                        data = canvas.toDataURL('image/png');\n                        photo.setAttribute('src', data);\n                        // Load the model.\n                        // eslint-disable-next-line promise/catch-or-return\n\n                        var wsfunction = 'quizaccess_proctoring_send_camshot';\n                        var params = {\n                            'courseid': props.courseid,\n                            'screenshotid': props.id,\n                            'quizid': props.quizid,\n                            'webcampicture': data,\n                            'imagetype': 1\n                        };\n\n                        var request = {\n                            methodname: wsfunction,\n                            args: params\n                        };\n\n                        Ajax.call([request])[0].done(async function (res) {\n                            if (res.warnings.length < 1) {\n                                // Not console.log(data);\n                            } else {\n                                Notification.addNotification({\n                                    message: 'Something went wrong during taking screenshot.',\n                                    type: 'error'\n                                });\n                            }\n                        }).fail(Notification.exception);\n\n                    } else {\n                        clearphoto();\n                    }\n                }\n\n                await startup();\n\n                return data;\n            }\n        };\n    });\n"],"names":["isCameraAllowed","define","$","Ajax","Notification","hideButtons","prop","html","on","this","checked","takepicturedelay","detectface","async","input","croppedImage","output","faceapi","detectAllFaces","length","detections","box","imageRef","regionsToExtract","Rect","x","y","width","height","faceImages","extractFaces","console","log","forEach","cnv","src","toDataURL","extractFaceFromBox","props","modelurl","nets","ssdMobilenetv1","loadFromUri","camshotdelay","document","getElementById","innerHTML","image_width","streaming","data","append","video","canvas","photo","takepicture","context","getContext","drawImage","setAttribute","webcampicture","faceFound","request","methodname","args","courseid","id","quizid","call","done","res","warnings","addNotification","message","type","fail","exception","fillStyle","fillRect","clearphoto","navigator","mediaDevices","getUserMedia","audio","then","stream","srcObject","play","catch","addEventListener","videoHeight","videoWidth","isNaN","ev","preventDefault","setTimeout","setInterval","allowcamerawarning","trigger","startup"],"mappings":"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"}