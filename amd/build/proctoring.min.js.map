{"version":3,"file":"proctoring.min.js","sources":["../src/proctoring.js"],"sourcesContent":["// @SuppressWarnings(\"javascript:S4144\");\nlet isCameraAllowed = false;\n\ndefine(['jquery', 'core/ajax', 'core/notification'],\n    function($, Ajax, Notification) {\n        $('#id_submitbutton').prop(\"disabled\", true);\n        $(function() {\n            $('#id_submitbutton').prop(\"disabled\", true);\n            $('#id_proctoring').on('change', function() {\n                if (this.checked && isCameraAllowed) {\n                    $('#id_submitbutton').prop(\"disabled\", false);\n                } else {\n                    $('#id_submitbutton').prop(\"disabled\", true);\n                }\n            });\n        });\n        /**\n         * Function hideButtons\n         */\n        function hideButtons() {\n            $('.mod_quiz-next-nav').prop(\"disabled\", true);\n            $('.submitbtns').html('<p class=\"text text-red red\">You need to enable web camera before submitting this quiz!</p>');\n        }\n\n        const showNotification = (message, type) => {\n            removeNotifications();\n            Notification.addNotification({\n                message,\n                type\n            });\n        };\n\n        const removeNotifications = () => {\n            try {\n                const alertElements = document.getElementsByClassName('alert');\n                if(alertElements.length > 0) {\n                    Array.from(alertElements).forEach(alertDiv => {\n                        alertDiv.style.display = 'none';\n                    });\n                }\n            } catch (error) {\n                // eslint-disable-next-line no-console\n                console.log(error);\n            }\n        };\n        let firstcalldelay = 3000; // 3 seconds after the page load.\n        let takepicturedelay = 30000; // 30 seconds\n        // Function to draw image from the box data.\n        const extractFaceFromBox = async(imageRef, box, croppedImage) => {\n            const regionsToExtract = [\n                // eslint-disable-next-line no-undef\n                new faceapi.Rect(box.x, box.y, box.width, box.height)\n            ];\n            // eslint-disable-next-line no-undef\n            let faceImages = await faceapi.extractFaces(imageRef, regionsToExtract);\n\n            if (faceImages.length === 0) {\n                // eslint-disable-next-line no-console\n                console.log('Face not found');\n            } else {\n                // eslint-disable-next-line no-console\n                faceImages.forEach((cnv) => {\n                    croppedImage.src = cnv.toDataURL();\n                });\n            }\n        };\n        const detectface = async(input, croppedImage) => {\n            // eslint-disable-next-line no-undef\n            const output = await faceapi.detectAllFaces(input);\n            if (output.length === 0) {\n                // eslint-disable-next-line no-console\n                console.log('Face not found');\n            } else {\n                let detections = output[0].box;\n                await extractFaceFromBox(input, detections, croppedImage);\n            }\n        };\n        return {\n            async setup(props, modelurl) {\n                // eslint-disable-next-line babel/no-unused-expressions,no-undef,promise/catch-or-return\n                await faceapi.nets.ssdMobilenetv1.loadFromUri(modelurl);\n                takepicturedelay = props.camshotdelay;\n                // Skip for summary page\n                if (document.getElementById(\"page-mod-quiz-summary\") !== null &&\n                    document.getElementById(\"page-mod-quiz-summary\").innerHTML.length) {\n                    return false;\n                }\n                if (document.getElementById(\"page-mod-quiz-review\") !== null &&\n                    document.getElementById(\"page-mod-quiz-review\").innerHTML.length) {\n                    return false;\n                }\n\n                const width = props.image_width;\n                let height = 0; // This will be computed based on the input stream\n                let streaming = false;\n                let data = null;\n\n                $('#mod_quiz_navblock').append('<div class=\"card-body p-3\"><h3 class=\"no text-left\">Webcam</h3> <br/>'\n                    + '<video id=\"video\">Video stream not available.</video>'\n                    + '<img id=\"cropimg\" src=\"\" alt=\"\"/><canvas id=\"canvas\" style=\"display:none;\"></canvas>'\n                    + '<div class=\"output\" style=\"display:none;\">'\n                    + '<img id=\"photo\" alt=\"The picture will appear in this box.\"/></div></div>');\n                // eslint-disable-next-line promise/catch-or-return\n\n                // eslint-disable-next-line promise/always-return\n                const video = document.getElementById('video');\n                const canvas = document.getElementById('canvas');\n                const photo = document.getElementById('photo');\n\n                const clearphoto = () => {\n                    const context = canvas.getContext('2d');\n                    context.fillStyle = \"#AAA\";\n                    context.fillRect(0, 0, canvas.width, canvas.height);\n                    data = canvas.toDataURL('image/png');\n                    photo.setAttribute('src', data);\n                };\n\n                const takepicture = async() => {\n                    const context = canvas.getContext('2d');\n                    if (width && height) {\n                        canvas.width = width;\n                        canvas.height = height;\n                        context.drawImage(video, 0, 0, width, height);\n                        data = canvas.toDataURL('image/png');\n                        photo.setAttribute('src', data);\n                        props.webcampicture = data;\n                        // eslint-disable-next-line no-console,promise/catch-or-return\n                        let croppedImage = $('#cropimg');\n                        await detectface(photo, croppedImage);\n                        let faceFound;\n                        let faceImage;\n                        if (croppedImage.src) {\n                            // eslint-disable-next-line no-console\n                            console.log(\"Face found\");\n                            removeNotifications();\n                            faceFound = 1;\n                            faceImage = croppedImage.src;\n                        } else {\n                            // eslint-disable-next-line no-console\n                            console.log(\"Face not found\");\n                            showNotification('Face not found. Try changing your camera to a better lighting. Thanks.', 'error');\n                            faceFound = 0;\n                            faceImage = \"\";\n                        }\n                        // eslint-disable-next-line promise/catch-or-return\n                        var wsfunction = 'quizaccess_proctoring_send_camshot';\n                        var params = {\n                            'courseid': props.courseid,\n                            'screenshotid': props.id,\n                            'quizid': props.quizid,\n                            'webcampicture': data,\n                            'imagetype': 1,\n                            'parenttype': 'camshot_image',\n                            'faceimage': faceImage,\n                            'facefound': faceFound,\n                        };\n                        var request = {\n                            methodname: wsfunction,\n                            args: params\n                        };\n\n                        Ajax.call([request])[0].done(function(res) {\n                            if (res.warnings.length < 1) {\n                                // NO\n                            } else {\n                                if (video) {\n                                    Notification.addNotification({\n                                        message: 'Something went wrong during taking the image.',\n                                        type: 'error'\n                                    });\n                                }\n                            }\n                        }).fail(Notification.exception);\n                    } else {\n                        clearphoto();\n                    }\n                };\n\n                navigator.mediaDevices.getUserMedia({video: true, audio: false})\n                    // eslint-disable-next-line promise/always-return\n                    .then(function (stream) {\n                        video.srcObject = stream;\n                        video.play();\n                        isCameraAllowed = true;\n                    })\n                    .catch(function () {\n                        hideButtons();\n                    });\n\n                if (video) {\n                    video.addEventListener('canplay', function() {\n                        if (!streaming) {\n                            height = video.videoHeight / (video.videoWidth / width);\n                            // Firefox currently has a bug where the height can't be read from\n                            // The video, so we will make assumptions if this happens.\n                            if (isNaN(height)) {\n                                height = width / (4 / 3);\n                            }\n                            video.setAttribute('width', width);\n                            video.setAttribute('height', height);\n                            canvas.setAttribute('width', width);\n                            canvas.setAttribute('height', height);\n                            streaming = true;\n                        }\n                    }, false);\n\n                    // Allow to click picture\n                    video.addEventListener('click', async function(ev) {\n                        await takepicture();\n                        ev.preventDefault();\n                    }, false);\n                    setTimeout(takepicture, firstcalldelay);\n                    setInterval(takepicture, takepicturedelay);\n                } else {\n                    hideButtons();\n                }\n\n                return true;\n            },\n            async init(props) {\n                let height = 0; // This will be computed based on the input stream\n                let streaming = false;\n                let video = null;\n                let canvas = null;\n                let photo = null;\n                let data = null;\n                const width = props.image_width;\n\n                /**\n                 * Startup\n                 */\n                async function startup() {\n                    video = document.getElementById('video');\n                    canvas = document.getElementById('canvas');\n                    photo = document.getElementById('photo');\n\n                    if (video) {\n                        navigator.mediaDevices.getUserMedia({video: true, audio: false})\n                            // eslint-disable-next-line promise/always-return\n                            .then(function(stream) {\n                                video.srcObject = stream;\n                                video.play();\n                                isCameraAllowed = true;\n                            })\n                            .catch(function() {\n                                Notification.addNotification({\n                                    message: props.allowcamerawarning,\n                                    type: 'warning'\n                                });\n                                hideButtons();\n                            });\n\n                        video.addEventListener('canplay', function() {\n                            if (!streaming) {\n                                height = video.videoHeight / (video.videoWidth / width);\n                                // Firefox currently has a bug where the height can't be read from\n                                // The video, so we will make assumptions if this happens.\n                                if (isNaN(height)) {\n                                    height = width / (4 / 3);\n                                }\n                                video.setAttribute('width', width);\n                                video.setAttribute('height', height);\n                                canvas.setAttribute('width', width);\n                                canvas.setAttribute('height', height);\n                                streaming = true;\n                            }\n                        }, false);\n\n                        // Allow to click picture\n                        video.addEventListener('click', async function(ev) {\n                            await takepicture();\n                            ev.preventDefault();\n                        }, false);\n                    } else {\n                        hideButtons();\n                    }\n                    clearphoto();\n                }\n\n                /**\n                 * Clearphoto\n                 */\n                function clearphoto() {\n                    if (isCameraAllowed) {\n                        var context = canvas.getContext('2d');\n                        context.fillStyle = \"#AAA\";\n                        context.fillRect(0, 0, canvas.width, canvas.height);\n\n                        data = canvas.toDataURL('image/png');\n                        photo.setAttribute('src', data);\n                    } else {\n                        hideButtons();\n                    }\n                }\n\n                /**\n                 * Takepicture\n                 */\n                async function takepicture() {\n                    var context = canvas.getContext('2d');\n                    if (width && height) {\n                        $(document).trigger(\"screenshoottaken\");\n                        canvas.width = width;\n                        canvas.height = height;\n                        context.drawImage(video, 0, 0, width, height);\n                        data = canvas.toDataURL('image/png');\n                        photo.setAttribute('src', data);\n                        // Load the model.\n                        // eslint-disable-next-line promise/catch-or-return\n\n                        var wsfunction = 'quizaccess_proctoring_send_camshot';\n                        var params = {\n                            'courseid': props.courseid,\n                            'screenshotid': props.id,\n                            'quizid': props.quizid,\n                            'webcampicture': data,\n                            'imagetype': 1\n                        };\n\n                        var request = {\n                            methodname: wsfunction,\n                            args: params\n                        };\n\n                        Ajax.call([request])[0].done(async function(res) {\n                            if (res.warnings.length < 1) {\n                                // Not console.log(data);\n                            } else {\n                                Notification.addNotification({\n                                    message: 'Something went wrong during taking screenshot.',\n                                    type: 'error'\n                                });\n                            }\n                        }).fail(Notification.exception);\n\n                    } else {\n                        clearphoto();\n                    }\n                }\n\n                await startup();\n\n                return data;\n            }\n        };\n    });\n"],"names":["isCameraAllowed","define","$","Ajax","Notification","hideButtons","prop","html","on","this","checked","removeNotifications","alertElements","document","getElementsByClassName","length","Array","from","forEach","alertDiv","style","display","error","console","log","takepicturedelay","detectface","async","input","croppedImage","output","faceapi","detectAllFaces","detections","box","imageRef","regionsToExtract","Rect","x","y","width","height","faceImages","extractFaces","cnv","src","toDataURL","extractFaceFromBox","props","modelurl","nets","ssdMobilenetv1","loadFromUri","camshotdelay","getElementById","innerHTML","image_width","streaming","data","append","video","canvas","photo","takepicture","context","getContext","drawImage","setAttribute","webcampicture","faceFound","faceImage","message","type","addNotification","request","methodname","args","courseid","id","quizid","call","done","res","warnings","fail","exception","fillStyle","fillRect","clearphoto","navigator","mediaDevices","getUserMedia","audio","then","stream","srcObject","play","catch","addEventListener","videoHeight","videoWidth","isNaN","ev","preventDefault","setTimeout","setInterval","allowcamerawarning","trigger","startup"],"mappings":"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"}