{"version":3,"file":"proctoring.min.js","sources":["../src/proctoring.js"],"sourcesContent":["// @SuppressWarnings(\"javascript:S4144\");\nlet isCameraAllowed = false;\n\ndefine(['jquery', 'core/ajax', 'core/notification'],\n    function ($, Ajax, Notification) {\n        $('#id_submitbutton').prop(\"disabled\", true);\n        $(function () {\n            $('#id_submitbutton').prop(\"disabled\", true);\n            $('#id_proctoring').on('change', function () {\n                if (this.checked && isCameraAllowed) {\n                    $('#id_submitbutton').prop(\"disabled\", false);\n                } else {\n                    $('#id_submitbutton').prop(\"disabled\", true);\n                }\n            });\n        });\n\n        /**\n         * Function hideButtons\n         */\n        function hideButtons() {\n            $('.mod_quiz-next-nav').prop(\"disabled\", true);\n            $('.submitbtns').html('<p class=\"text text-red red\">You need to enable web camera before submitting this quiz!</p>');\n        }\n\n        let firstcalldelay = 3000; // 3 seconds after the page load\n        let takepicturedelay = 30000; // 30 seconds\n\n        // Function to draw image from the box data.\n        const extractFaceFromBox = async (imageRef, box, croppedImage) => {\n            const regionsToExtract = [\n                // eslint-disable-next-line no-undef\n                new faceapi.Rect(box.x, box.y, box.width, box.height)\n            ];\n            // eslint-disable-next-line no-undef\n            let faceImages = await faceapi.extractFaces(imageRef, regionsToExtract);\n\n            if (faceImages.length === 0) {\n                // eslint-disable-next-line no-console\n            } else {\n                // eslint-disable-next-line no-console\n                faceImages.forEach((cnv) => {\n                    croppedImage.src = cnv.toDataURL();\n                });\n            }\n        };\n        const detectface = async (input, croppedImage) => {\n            // eslint-disable-next-line no-undef\n            const output = await faceapi.detectAllFaces(input);\n            if (output.length === 0) {\n                // eslint-disable-next-line no-console\n                console.log(\"No face found\");\n                return false;\n            } else {\n                // eslint-disable-next-line no-console\n                console.log(\"Face found\");\n                let detections = output[0].box;\n                return await extractFaceFromBox(input, detections, croppedImage);\n            }\n        };\n        return {\n            async setup(props, modelurl) {\n                // eslint-disable-next-line babel/no-unused-expressions,no-undef,promise/catch-or-return\n                // Camshotdelay taken from admin_settings\n                takepicturedelay = props.camshotdelay;\n                // Skip for summary page\n                if (document.getElementById(\"page-mod-quiz-summary\") !== null &&\n                    document.getElementById(\"page-mod-quiz-summary\").innerHTML.length) {\n                    return false;\n                }\n                if (document.getElementById(\"page-mod-quiz-review\") !== null &&\n                    document.getElementById(\"page-mod-quiz-review\").innerHTML.length) {\n                    return false;\n                }\n\n                const width = props.image_width;\n                let height = 0; // This will be computed based on the input stream\n                let streaming = false;\n                let data = null;\n\n                $('#mod_quiz_navblock').append('<div class=\"card-body p-3\"><h3 class=\"no text-left\">Webcam</h3> <br/>'\n                    + '<video id=\"video\">Video stream not available.</video>'\n                    + '<img id=\"cropimg\" src=\"\" alt=\"\"/><canvas id=\"canvas\" style=\"display:none;\"></canvas>'\n                    + '<div class=\"output\" style=\"display:none;\">'\n                    + '<img id=\"photo\" alt=\"The picture will appear in this box.\"/></div></div>');\n\n                const video = document.getElementById('video');\n                const canvas = document.getElementById('canvas');\n                const photo = document.getElementById('photo');\n\n                const clearphoto = () => {\n                    const context = canvas.getContext('2d');\n                    context.fillStyle = \"#AAA\";\n                    context.fillRect(0, 0, canvas.width, canvas.height);\n                    data = canvas.toDataURL('image/png');\n                    photo.setAttribute('src', data);\n                };\n\n                const takepicture = async () => {\n                    const context = canvas.getContext('2d');\n                    if (width && height) {\n                        canvas.width = width;\n                        canvas.height = height;\n                        context.drawImage(video, 0, 0, width, height);\n                        data = canvas.toDataURL('image/png');\n                        photo.setAttribute('src', data);\n                        props.webcampicture = data;\n                        // eslint-disable-next-line no-console,promise/catch-or-return\n                        Promise.all([\n                            // eslint-disable-next-line no-undef\n                            faceapi.nets.ssdMobilenetv1.loadFromUri(modelurl),\n                            // eslint-disable-next-line promise/always-return\n                        ]).then(async () => {\n                                let croppedImage = $('#cropimg');\n                                await detectface(photo, croppedImage);\n                            }\n                        );\n                        // Load the model.\n                        // eslint-disable-next-line promise/catch-or-return\n                        var wsfunction = 'quizaccess_proctoring_send_camshot';\n                        var params = {\n                            'courseid': props.courseid,\n                            'screenshotid': props.id,\n                            'quizid': props.quizid,\n                            'webcampicture': data,\n                            'imagetype': 1\n                        };\n\n                        var request = {\n                            methodname: wsfunction,\n                            args: params\n                        };\n\n                        Ajax.call([request])[0].done(function (res) {\n                            if (res.warnings.length < 1) {\n                                // NO\n                            } else {\n                                if (video) {\n                                    Notification.addNotification({\n                                        message: 'Something went wrong during taking the image.',\n                                        type: 'error'\n                                    });\n                                }\n                            }\n                        }).fail(Notification.exception);\n                    } else {\n                        clearphoto();\n                    }\n                };\n\n                navigator.mediaDevices.getUserMedia({video: true, audio: false})\n                    // eslint-disable-next-line promise/always-return\n                    .then(function (stream) {\n                        video.srcObject = stream;\n                        video.play();\n                        isCameraAllowed = true;\n                    })\n                    .catch(function () {\n                        hideButtons();\n                    });\n\n                if (video) {\n                    video.addEventListener('canplay', function () {\n                        if (!streaming) {\n                            height = video.videoHeight / (video.videoWidth / width);\n                            // Firefox currently has a bug where the height can't be read from\n                            // The video, so we will make assumptions if this happens.\n                            if (isNaN(height)) {\n                                height = width / (4 / 3);\n                            }\n                            video.setAttribute('width', width);\n                            video.setAttribute('height', height);\n                            canvas.setAttribute('width', width);\n                            canvas.setAttribute('height', height);\n                            streaming = true;\n                        }\n                    }, false);\n\n                    // Allow to click picture\n                    video.addEventListener('click', async function (ev) {\n                        await takepicture();\n                        ev.preventDefault();\n                    }, false);\n                    setTimeout(takepicture, firstcalldelay);\n                    setInterval(takepicture, takepicturedelay);\n                } else {\n                    hideButtons();\n                }\n\n                return true;\n            },\n            async init(props) {\n                let height = 0; // This will be computed based on the input stream\n                let streaming = false;\n                let video = null;\n                let canvas = null;\n                let photo = null;\n                let data = null;\n                const width = props.image_width;\n\n                /**\n                 * Startup\n                 */\n                async function startup() {\n                    video = document.getElementById('video');\n                    canvas = document.getElementById('canvas');\n                    photo = document.getElementById('photo');\n\n                    if (video) {\n                        navigator.mediaDevices.getUserMedia({video: true, audio: false})\n                            // eslint-disable-next-line promise/always-return\n                            .then(function (stream) {\n                                video.srcObject = stream;\n                                video.play();\n                                isCameraAllowed = true;\n                            })\n                            .catch(function () {\n                                Notification.addNotification({\n                                    message: props.allowcamerawarning,\n                                    type: 'warning'\n                                });\n                                hideButtons();\n                            });\n\n                        video.addEventListener('canplay', function () {\n                            if (!streaming) {\n                                height = video.videoHeight / (video.videoWidth / width);\n                                // Firefox currently has a bug where the height can't be read from\n                                // The video, so we will make assumptions if this happens.\n                                if (isNaN(height)) {\n                                    height = width / (4 / 3);\n                                }\n                                video.setAttribute('width', width);\n                                video.setAttribute('height', height);\n                                canvas.setAttribute('width', width);\n                                canvas.setAttribute('height', height);\n                                streaming = true;\n                            }\n                        }, false);\n\n                        // Allow to click picture\n                        video.addEventListener('click', async function (ev) {\n                            await takepicture();\n                            ev.preventDefault();\n                        }, false);\n                    } else {\n                        hideButtons();\n                    }\n                    clearphoto();\n                }\n\n                /**\n                 * Clearphoto\n                 */\n                function clearphoto() {\n                    if (isCameraAllowed) {\n                        var context = canvas.getContext('2d');\n                        context.fillStyle = \"#AAA\";\n                        context.fillRect(0, 0, canvas.width, canvas.height);\n\n                        data = canvas.toDataURL('image/png');\n                        photo.setAttribute('src', data);\n                    } else {\n                        hideButtons();\n                    }\n                }\n\n                /**\n                 * Takepicture\n                 */\n                async function takepicture() {\n                    var context = canvas.getContext('2d');\n                    if (width && height) {\n                        $(document).trigger(\"screenshoottaken\");\n                        canvas.width = width;\n                        canvas.height = height;\n                        context.drawImage(video, 0, 0, width, height);\n                        data = canvas.toDataURL('image/png');\n                        photo.setAttribute('src', data);\n                        // Load the model.\n                        // eslint-disable-next-line promise/catch-or-return\n\n                        var wsfunction = 'quizaccess_proctoring_send_camshot';\n                        var params = {\n                            'courseid': props.courseid,\n                            'screenshotid': props.id,\n                            'quizid': props.quizid,\n                            'webcampicture': data,\n                            'imagetype': 1\n                        };\n\n                        var request = {\n                            methodname: wsfunction,\n                            args: params\n                        };\n\n                        Ajax.call([request])[0].done(async function (res) {\n                            if (res.warnings.length < 1) {\n                                // Not console.log(data);\n                            } else {\n                                Notification.addNotification({\n                                    message: 'Something went wrong during taking screenshot.',\n                                    type: 'error'\n                                });\n                            }\n                        }).fail(Notification.exception);\n\n                    } else {\n                        clearphoto();\n                    }\n                }\n\n                await startup();\n\n                return data;\n            }\n        };\n    });\n"],"names":["isCameraAllowed","define","$","Ajax","Notification","hideButtons","prop","html","on","this","checked","takepicturedelay","extractFaceFromBox","imageRef","box","croppedImage","regionsToExtract","faceapi","Rect","x","y","width","height","extractFaces","faceImages","length","forEach","cnv","src","toDataURL","detectface","input","detectAllFaces","output","console","log","detections","setup","props","modelurl","camshotdelay","document","getElementById","innerHTML","image_width","streaming","data","append","video","canvas","photo","clearphoto","context","getContext","fillStyle","fillRect","setAttribute","takepicture","drawImage","webcampicture","Promise","all","nets","ssdMobilenetv1","loadFromUri","then","params","courseid","id","quizid","request","methodname","args","call","done","res","warnings","addNotification","message","type","fail","exception","navigator","mediaDevices","getUserMedia","audio","stream","srcObject","play","catch","addEventListener","videoHeight","videoWidth","isNaN","ev","preventDefault","setTimeout","setInterval","init","startup","trigger","allowcamerawarning"],"mappings":"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"}