{"version":3,"file":"proctoring.min.js","sources":["../src/proctoring.js"],"sourcesContent":["// @SuppressWarnings(\"javascript:S4144\");\nlet isCameraAllowed = false;\n\ndefine(['jquery', 'core/ajax', 'core/notification', 'core/str'],\n    function($, Ajax, Notification, Str) {\n        const loadStrings = async function() {\n            const stringkeys = [\n                {key: 'facenotfoundoncam', component: 'quizaccess_proctoring'},\n                {key: 'wrong_during_taking_image', component: 'quizaccess_proctoring'},\n                {key: 'wrong_during_taking_screenshot', component: 'quizaccess_proctoring'},\n                {key: 'enable_web_camera_before_submitting', component: 'quizaccess_proctoring'},\n                {key: 'webcam', component: 'quizaccess_proctoring'},\n                {key: 'videonotavailable', component: 'quizaccess_proctoring'},\n            ];\n            try {\n                const strings = await Str.get_strings(stringkeys);\n                return {\n                    facenotfoundoncam: strings[0],\n                    wrongduringtakingimage: strings[1],\n                    wrongduringtakingscreenshot: strings[2],\n                    enablewebcamerabeforesubmitting: strings[3],\n                    webcam: strings[4],\n                    videonotavailable: strings[5],\n                };\n            } catch (error) {\n                Notification.exception(error);\n                return {}; // Return an empty object in case of an error.\n            }\n        };\n\n        $('#id_submitbutton').prop(\"disabled\", true);\n        $(function() {\n            $('#id_submitbutton').prop(\"disabled\", true);\n            $('#id_proctoring').on('change', function() {\n                if (this.checked && isCameraAllowed) {\n                    $('#id_submitbutton').prop(\"disabled\", false);\n                } else {\n                    $('#id_submitbutton').prop(\"disabled\", true);\n                }\n            });\n        });\n\n        /**\n         * Function hideButtons\n         */\n        async function hideButtons() {\n            const strings = await loadStrings();\n            $('.mod_quiz-next-nav').prop(\"disabled\", true);\n            $('.submitbtns').html(`<p class=\"text text-red red\">${strings.enablewebcamerabeforesubmitting}</p>`);\n        }\n\n        const showNotification = (message, type) => {\n            removeNotifications();\n            Notification.addNotification({\n                message,\n                type\n            });\n        };\n\n        const removeNotifications = () => {\n            try {\n                const alertElements = document.getElementsByClassName('alert');\n                if (alertElements.length > 0) {\n                    Array.from(alertElements).forEach(alertDiv => {\n                        alertDiv.style.display = 'none';\n                    });\n                }\n            } catch (error) {\n                Notification.exception(error);\n            }\n        };\n\n        let firstcalldelay = 3000; // 3 seconds after the page load.\n        let takepicturedelay = 30000; // 30 seconds.\n\n        // Function to draw image from the box data.\n        const extractFaceFromBox = async(imageRef, box, croppedImage) => {\n            const regionsToExtract = [\n                // eslint-disable-next-line no-undef\n                new faceapi.Rect(box.x, box.y, box.width, box.height)\n            ];\n            // eslint-disable-next-line no-undef\n            let faceImages = await faceapi.extractFaces(imageRef, regionsToExtract);\n\n            if (faceImages.length !== 0) {\n                faceImages.forEach((cnv) => {\n                    croppedImage.src = cnv.toDataURL();\n                });\n            }\n        };\n\n        const detectface = async(input, croppedImage) => {\n            // eslint-disable-next-line no-undef\n            const output = await faceapi.detectAllFaces(input);\n            if (output.length !== 0) {\n                let detections = output[0].box;\n                await extractFaceFromBox(input, detections, croppedImage);\n            }\n        };\n\n        return {\n            async setup(props, modelurl) {\n                const strings = await loadStrings();\n                if (modelurl !== null) {\n                    // eslint-disable-next-line no-undef\n                    await faceapi.nets.ssdMobilenetv1.loadFromUri(modelurl);\n                }\n                takepicturedelay = props.camshotdelay;\n                // Skip for summary page.\n                if (document.getElementById(\"page-mod-quiz-summary\") !== null &&\n                    document.getElementById(\"page-mod-quiz-summary\").innerHTML.length) {\n                    return false;\n                }\n                if (document.getElementById(\"page-mod-quiz-review\") !== null &&\n                    document.getElementById(\"page-mod-quiz-review\").innerHTML.length) {\n                    return false;\n                }\n\n                const width = props.image_width;\n                let height = 0; // This will be computed based on the input stream.\n                let streaming = false;\n                let data = null;\n\n                $('body').append(`<div class=\"proctoring-fixed-webcam-box d-flex\">`\n                    + `<video id=\"video\">${strings.videonotavailable}</video>`\n                    + '<img id=\"cropimg\" src=\"\" alt=\"\"/><canvas id=\"canvas\" style=\"display:none;\"></canvas>'\n                    + '<div class=\"output\" style=\"display:none;\">'\n                    + '<img id=\"photo\" alt=\"The picture will appear in this box.\"/></div></div>');\n\n                const video = document.getElementById('video');\n                const canvas = document.getElementById('canvas');\n                const photo = document.getElementById('photo');\n\n                const makeElementDraggable = (element) => {\n                let pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;\n\n                    const dragMouseDown = (e) => {\n                        e.preventDefault();\n                        pos3 = e.clientX;\n                        pos4 = e.clientY;\n\n                        document.onmouseup = closeDragElement;\n                        document.onmousemove = elementDrag;\n                    };\n\n                    const elementDrag = (e) => {\n                        e.preventDefault();\n                        pos1 = pos3 - e.clientX;\n                        pos2 = pos4 - e.clientY;\n                        pos3 = e.clientX;\n                        pos4 = e.clientY;\n\n                        element.style.top = element.offsetTop - pos2 + \"px\";\n                        element.style.left = element.offsetLeft - pos1 + \"px\";\n                        element.style.bottom = element.offsetTop - pos2 + 200 + \"px\";\n                        element.style.right = element.offsetLeft - pos1 + 200 + \"px\";\n                    };\n\n                    const closeDragElement = () => {\n                        document.onmouseup = null;\n                        document.onmousemove = null;\n                    };\n\n                    element.onmousedown = dragMouseDown;\n                };\n                makeElementDraggable(video);\n\n                const clearphoto = () => {\n                    const context = canvas.getContext('2d');\n                    context.fillStyle = \"#AAA\";\n                    context.fillRect(0, 0, canvas.width, canvas.height);\n                    data = canvas.toDataURL('image/png');\n                    photo.setAttribute('src', data);\n                };\n\n                const takepicture = async() => {\n                    const context = canvas.getContext('2d');\n                    if (width && height) {\n                        canvas.width = width;\n                        canvas.height = height;\n                        context.drawImage(video, 0, 0, width, height);\n                        data = canvas.toDataURL('image/png');\n                        photo.setAttribute('src', data);\n                        props.webcampicture = data;\n\n                        let croppedImage = $('#cropimg');\n                        if (modelurl !== null) {\n                            await detectface(photo, croppedImage);\n                        }\n                        let faceFound;\n                        let faceImage;\n                        if (croppedImage.src) {\n                            if (modelurl !== null) {\n                                removeNotifications();\n                            }\n                            faceFound = 1;\n                            faceImage = croppedImage.src;\n                        } else {\n                            if (modelurl !== null) {\n                                showNotification(strings.facenotfoundoncam, 'error');\n                            }\n                            faceFound = 0;\n                            faceImage = \"\";\n                        }\n                        var wsfunction = 'quizaccess_proctoring_send_camshot';\n                        var params = {\n                            'courseid': props.courseid,\n                            'screenshotid': props.id,\n                            'quizid': props.quizid,\n                            'webcampicture': data,\n                            'imagetype': 1,\n                            'parenttype': 'camshot_image',\n                            'faceimage': faceImage,\n                            'facefound': faceFound,\n                        };\n\n                        var request = {\n                            methodname: wsfunction,\n                            args: params\n                        };\n\n                        Ajax.call([request])[0].done(function(res) {\n                            if (res.warnings.length >= 1) {\n                                if (video) {\n                                    Notification.addNotification({\n                                        message: strings.wrongduringtakingimage,\n                                        type: 'error'\n                                    });\n                                }\n                            }\n                        }).fail(Notification.exception);\n                    } else {\n                        clearphoto();\n                    }\n                };\n\n                navigator.mediaDevices.getUserMedia({video: true, audio: false})\n                    // eslint-disable-next-line promise/always-return\n                    .then(function(stream) {\n                        video.srcObject = stream;\n                        video.play();\n                        isCameraAllowed = true;\n                    })\n                    .catch(function() {\n                        hideButtons();\n                    });\n\n                if (video) {\n                    video.addEventListener('canplay', function() {\n                        if (!streaming) {\n                            height = video.videoHeight / (video.videoWidth / width);\n                            // Firefox currently has a bug where the height can't be read from.\n                            // The video, so we will make assumptions if this happens.\n                            if (isNaN(height)) {\n                                height = width / (4 / 3);\n                            }\n                            video.setAttribute('width', width);\n                            video.setAttribute('height', height);\n                            canvas.setAttribute('width', width);\n                            canvas.setAttribute('height', height);\n                            streaming = true;\n                        }\n                    }, false);\n\n                    // Allow to click picture.\n                    video.addEventListener('click', async function(ev) {\n                        await takepicture();\n                        ev.preventDefault();\n                    }, false);\n                    setTimeout(takepicture, firstcalldelay);\n                    setInterval(takepicture, takepicturedelay);\n                } else {\n                    hideButtons();\n                }\n\n                return true;\n            },\n            async init(props) {\n                let height = 0; // This will be computed based on the input stream.\n                let streaming = false;\n                let video = null;\n                let canvas = null;\n                let photo = null;\n                let data = null;\n                const width = props.image_width;\n\n                /**\n                 * Startup\n                 */\n                async function startup() {\n                    video = document.getElementById('video');\n                    canvas = document.getElementById('canvas');\n                    photo = document.getElementById('photo');\n\n                    if (video) {\n                        navigator.mediaDevices.getUserMedia({video: true, audio: false})\n                            // eslint-disable-next-line promise/always-return\n                            .then(function(stream) {\n                                video.srcObject = stream;\n                                video.play();\n                                isCameraAllowed = true;\n\n                                Notification.addNotification({\n                                    message: props.cameraallow,\n                                    type: 'success' // Success notification type.\n                                });\n                            })\n                            .catch(function() {\n                                Notification.addNotification({\n                                    message: props.allowcamerawarning,\n                                    type: 'warning'\n                                });\n                                hideButtons();\n                            });\n\n                        video.addEventListener('canplay', function() {\n                            if (!streaming) {\n                                height = video.videoHeight / (video.videoWidth / width);\n                                // Firefox currently has a bug where the height can't be read from.\n                                // The video, so we will make assumptions if this happens.\n                                if (isNaN(height)) {\n                                    height = width / (4 / 3);\n                                }\n                                video.setAttribute('width', width);\n                                video.setAttribute('height', height);\n                                canvas.setAttribute('width', width);\n                                canvas.setAttribute('height', height);\n                                streaming = true;\n                            }\n                        }, false);\n\n                        // Allow to click picture.\n                        video.addEventListener('click', async function(ev) {\n                            await takepicture();\n                            ev.preventDefault();\n                        }, false);\n                    } else {\n                        hideButtons();\n                    }\n                    clearphoto();\n                }\n\n                /**\n                 * Clearphoto\n                 */\n                function clearphoto() {\n                    if (isCameraAllowed) {\n                        var context = canvas.getContext('2d');\n                        context.fillStyle = \"#AAA\";\n                        context.fillRect(0, 0, canvas.width, canvas.height);\n\n                        data = canvas.toDataURL('image/png');\n                        photo.setAttribute('src', data);\n                    } else {\n                        hideButtons();\n                    }\n                }\n\n                /**\n                 * Takepicture\n                 */\n                async function takepicture() {\n\n                    const strings = await loadStrings();\n\n                    var context = canvas.getContext('2d');\n                    if (width && height) {\n                        $(document).trigger(\"screenshoottaken\");\n                        canvas.width = width;\n                        canvas.height = height;\n                        context.drawImage(video, 0, 0, width, height);\n                        data = canvas.toDataURL('image/png');\n                        photo.setAttribute('src', data);\n\n                        var wsfunction = 'quizaccess_proctoring_send_camshot';\n                        var params = {\n                            'courseid': props.courseid,\n                            'screenshotid': props.id,\n                            'quizid': props.quizid,\n                            'webcampicture': data,\n                            'imagetype': 1\n                        };\n\n                        var request = {\n                            methodname: wsfunction,\n                            args: params\n                        };\n\n                        Ajax.call([request])[0].done(async function(res) {\n                            if (res.warnings.length >= 1) {\n                                Notification.addNotification({\n                                    message: strings.wrongduringtakingscreenshot,\n                                    type: 'error'\n                                });\n                            }\n                        }).fail(Notification.exception);\n\n                    } else {\n                        clearphoto();\n                    }\n                }\n\n                await startup();\n\n                return data;\n            }\n        };\n    });\n"],"names":["isCameraAllowed","define","$","Ajax","Notification","Str","loadStrings","async","stringkeys","key","component","strings","get_strings","facenotfoundoncam","wrongduringtakingimage","wrongduringtakingscreenshot","enablewebcamerabeforesubmitting","webcam","videonotavailable","error","exception","hideButtons","prop","html","on","this","checked","removeNotifications","alertElements","document","getElementsByClassName","length","Array","from","forEach","alertDiv","style","display","takepicturedelay","detectface","input","croppedImage","output","faceapi","detectAllFaces","detections","box","imageRef","regionsToExtract","Rect","x","y","width","height","faceImages","extractFaces","cnv","src","toDataURL","extractFaceFromBox","props","modelurl","nets","ssdMobilenetv1","loadFromUri","camshotdelay","getElementById","innerHTML","image_width","streaming","data","append","video","canvas","photo","element","pos1","pos2","pos3","pos4","elementDrag","e","preventDefault","clientX","clientY","top","offsetTop","left","offsetLeft","bottom","right","closeDragElement","onmouseup","onmousemove","onmousedown","makeElementDraggable","takepicture","context","getContext","drawImage","setAttribute","webcampicture","faceFound","faceImage","message","type","addNotification","request","methodname","args","courseid","id","quizid","call","done","res","warnings","fail","fillStyle","fillRect","clearphoto","navigator","mediaDevices","getUserMedia","audio","then","stream","srcObject","play","catch","addEventListener","videoHeight","videoWidth","isNaN","ev","setTimeout","setInterval","cameraallow","allowcamerawarning","trigger","startup"],"mappings":"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"}